{"version":3,"sources":["components/layout/NavBar.js","context.js","components/tracks/Track.js","components/layout/Spinner.js","components/tracks/Tracks.js","components/tracks/search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","process","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","Track","track","artist_name","track_name","album_name","to","track_id","src","alt","style","width","margin","display","Tracks","length","map","item","key","Spinner","search","trackTitle","handleChange","e","target","findTrack","preventDefault","onSubmit","bind","placeholder","name","onChange","Index","Lyrics","lyrics","match","params","id","Object","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","format","updated_time","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e61d95f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className='navbar navbar-dark bg-dark mb-5'>\r\n      <span className='navbar-brand mb-0 h1 mx-auto'>LyricFinder</span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SEARCH_TRACKS':\r\n      return {\r\n        ...state,\r\n        track_list: action.payload,\r\n        heading: 'Search Results'\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    track_list: [],\r\n    heading: 'Top 10 Tracks',\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `http://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=10&page_size=10&country=ng&f_has_lyrics=1&apikey=${process.env.REACT_APP_MX_KEY}`\r\n      )\r\n      .then(res => {\r\n        this.setState({ track_list: res.data.message.body.track_list });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Track = ({ track }) => {\r\n  return (\r\n    <div className='col-md-6'>\r\n      <div className='card mb-4 shadow-sm'>\r\n        <div className='card-body'>\r\n          <h5>{track.artist_name}</h5>\r\n          <p className='card-text'>\r\n            <strong>\r\n              <i className='fas fa-play'></i> Track\r\n            </strong>\r\n            : {track.track_name}\r\n            <br />\r\n            <strong>\r\n              <i className='fas fa-compact-disc'></i> Album\r\n            </strong>\r\n            : {track.album_name}\r\n          </p>\r\n          <Link\r\n            to={`lyrics/track/${track.track_id}`}\r\n            className='btn btn-dark btn-block'\r\n          >\r\n            <i className='fas fa-chevron-right'></i> View Lyrics\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n","import React from 'react';\r\n// import Spinner from './Spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={'https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/source.gif'}\r\n        alt='Loading...'\r\n        style={{ width: '200px', margin: '40px auto', display: 'block' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Track from './Track';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { track_list, heading } = value;\r\n          if (!track_list || track_list.length === 0) {\r\n            return <Spinner />;\r\n          } else {\r\n            return (\r\n              <>\r\n                <h3 className='text-center mb-4'>{heading}</h3>\r\n                <div className='row'>\r\n                  {track_list.map(item => (\r\n                    <Track track={item.track} key={item.track.track_id} />\r\n                  ))}\r\n                </div>\r\n              </>\r\n            );\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Consumer } from '../../context';\r\n\r\nclass search extends Component {\r\n  state = {\r\n    trackTitle: ''\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      trackTitle: e.target.value\r\n    });\r\n  };\r\n\r\n  findTrack = (dispatch, e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(\r\n        `http://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_MX_KEY}`\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'SEARCH_TRACKS',\r\n          payload: res.data.message.body.track_list\r\n        });\r\n\r\n        this.setState({ trackTitle: '' });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-4 p-4'>\r\n              <h4 className='display-4 text-center'>\r\n                <i className='fas fa-music'></i> Search For A Song\r\n              </h4>\r\n              <p className='lead text-center'>Get the lyrics for any song</p>\r\n              <form\r\n                className='form-group'\r\n                onSubmit={this.findTrack.bind(this, dispatch)}\r\n              >\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-lg'\r\n                  placeholder='Song title...'\r\n                  name='trackTitle'\r\n                  value={this.state.trackTitle}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <button className='btn btn-primary btn-lg btn-block mb-5 mt-2'>\r\n                  Get Track Lyrics\r\n                </button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default search;\r\n","import React from 'react';\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/search';\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <Search />\r\n      <Tracks />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nclass Lyrics extends Component {\r\n  state = {\r\n    track: {},\r\n    lyrics: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `http://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MX_KEY}`\r\n      )\r\n      .then(res => {\r\n        this.setState({ lyrics: res.data.message.body.lyrics });\r\n        return axios.get(\r\n          `http://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MX_KEY}`\r\n        );\r\n      })\r\n      .then(res => {\r\n        this.setState({ track: res.data.message.body.track });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { lyrics, track } = this.state;\r\n    if (\r\n      !lyrics ||\r\n      !track ||\r\n      Object.keys(track).length === 0 ||\r\n      Object.keys(track).length === 0\r\n    ) {\r\n      return <Spinner />;\r\n    }\r\n    console.log(track);\r\n    return (\r\n      <>\r\n        <Link to='/' className='btn btn-dark btn-sm mb-4'>\r\n          Go back\r\n        </Link>\r\n        <div className='card'>\r\n          <h5 className='card-header'>\r\n            {track.track_name} by{' '}\r\n            <span className='text-secondary'>{track.artist_name}</span>\r\n          </h5>\r\n          <div className='card-body'>\r\n            <p className='card-text'>{lyrics.lyrics_body}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <ul className='list-group mt-3'>\r\n          <li className='list-group-item'>\r\n            <strong>Album ID</strong>: {track.album_id}\r\n          </li>\r\n          <li className='list-group-item'>\r\n            <strong>Song Genre</strong>:{' '}\r\n            {\r\n              track.primary_genres.music_genre_list[0].music_genre\r\n                .music_genre_name\r\n            }\r\n          </li>\r\n          <li className='list-group-item'>\r\n            <strong>Explicit Words</strong>:{' '}\r\n            {track.explicit === 0 ? 'No' : 'Yes'}\r\n          </li>\r\n          <li className='list-group-item'>\r\n            <strong>Release Date</strong>:{' '}\r\n            <Moment format='DD/MM/YY'>{track.updated_time}</Moment>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from '../src/components/layout/NavBar';\nimport Index from '../src/components/layout/Index';\nimport Lyrics from '../src/components/tracks/Lyrics';\nimport { Provider } from './context';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <NavBar />\n        <div className='container'>\n          <Switch>\n            <Route exact path='/' component={Index}></Route>\n            <Route exact path='/lyrics/track/:id' component={Lyrics}></Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}